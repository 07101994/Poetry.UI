@using Poetry.UI.AppSupport
@using Poetry.UI.Core
@using System.Web.Mvc
@using Newtonsoft.Json

@inherits System.Web.Mvc.WebViewPage

@{
    var AppRepository = DependencyResolver.Current.GetService<IAppRepository>();
    var BasePathProvider = DependencyResolver.Current.GetService<IBasePathProvider>();
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Poetry</title>
    <base href="/@BasePathProvider.BasePath/">
    <link rel="stylesheet" type="text/css" href="Portal/Styles/portal.css" />
    <script src="Portal/Scripts/portal.js"></script>
    <script>
        var portal = new Portal();
        portal.inject('appNames', @Html.Raw(JsonConvert.SerializeObject(AppRepository.GetAll().ToDictionary(app => app.Name, app => app.Translations.Get("name", "en") ?? app.Name))));
    </script>
    <link rel="stylesheet" type="text/css" href="Form/Styles/form-elements.css" />
    <script src="Form/Scripts/model-builder.js"></script>
    <script src="Form/Scripts/form-builder.js"></script>
    <script src="Form/Scripts/property-definition-provider.js"></script>
    <script src="Form/Scripts/form-elements.js"></script>
    <script>
        portal.inject('formBuilder', new FormBuilder());
        portal.inject('modelBuilder', new ModelBuilder());
        portal.inject('formElements', formElements);
        portal.inject('propertyDefinitionProvider', new PropertyDefinitionProvider());
    </script>
    @foreach (var app in AppRepository.GetAll())
    {
        foreach (var script in app.Scripts.OrderBy(s => s.Order))
        {
            <script src="@script.Src"></script>
        }
        foreach (var style in app.Styles)
        {
            <link rel="stylesheet" type="text/css" href="@style" />
        }
        <script>
        portal.injectForApp('@app.Name', 'translations', @Html.Raw(JsonConvert.SerializeObject(app.Translations.GetAll("en"))));
        </script>
    }
</head>
<body>
</body>
</html>